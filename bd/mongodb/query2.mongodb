use('db1')
db.universidades.insertMany(
    [
        {
            nombre: "PUCP",
            carreras: ["Ing Mecanica", "Ing Mecatronica", "Derecho", "Psicologia"],
            alumnos: 10000,
            direccion: {
                calle: "Av Universitaria",
                numero: 499,
                distrito: "San Isidro",
                region: "Lima"
            },
            presupuesto: 5000000
        },
        {
            nombre: "UPCH",
            carreras: ["Medicina", "Enfermeria", "Ing Biomedica", "Farmacia"],
            alumnos: 5000,
            direccion: {
                calle: "Av Lima",
                numero: 243,
                distrito: "Surco",
                region: "Lima"
            },
            presupuesto: 4000000
        },
        {
            nombre: "UNMSM",
            carreras: ["Ing Mecanica", "Ing Mecatronica", "Sociologia", "Derecho", "Psicologia"],
            alumnos: 15000,
            direccion: {
                calle: "Av Peru",
                numero: 238,
                distrito: "Miraflores",
                region: "Lima"
            },
            presupuesto: 4000000
        },
        {
            nombre: "UNSA",
            carreras: ["Ing Mecanica", "Ing Mecatronica", "Ing Quimica", "Derecho", "Trabajo Social"],
            alumnos: 4000,
            direccion: {
                calle: "Av Venezuela",
                numero: 201,
                distrito: "Cercado",
                region: "Arequipa"
            },
            presupuesto: 2000000
        }
    ]
);


use('db1')
db.universidades.find();

use('db1')
db.universidades.find(
    // filtro
    {
        "direccion.region": "Lima",
        presupuesto: 4000000
    },
    // project (campos que quiero que se muestren)
    {
        nombre: true,
        alumnos: true,
        _id: false
    }
);

// operadores

// gt: greater than, lt: less than, gte: greater than or equal, lte: less than or equal

// traer las universidades que tengan una cantidad de alumnos
// mayor o igual a 7000
use('db1')
db.universidades.find(
    // filtro
    {
        alumnos: {
            $gte: 7000 
        }
    }
);


// traer las universidades que tengan un presupuesto
// mayor o igual que 3M y menor que 5M

use('db1')
db.universidades.find(
    {
        presupuesto: {
            $gte: 3000000,
            $lt: 5000000
        }
    }
);

// operador $or
// traer las universidades que cumplan con tener
// una cantidad de alumnos mayores que 10K o
// que tengan un presupuesto mayor o igual que 4M


use('db1')
db.universidades.find(
    {
        $or: [
            {
                alumnos: { $gt: 10000}
            },
            {
                presupuesto: { $gte: 4000000}
            }
        ]
    }
);


// traer las universidades que tengan un presupuesto
// mayor o igual que 3M y menor que 5M

use('db1')
db.universidades.find(
    {
        $and: [
            {
                presupuesto: { $gte: 3000000}
            },
            {
                presupuesto: { $lt: 5000000}
            }
        ]
    }
);

// $and y $or
// traer documentos donde el numero de alumnos sea menor que 10k
// o el presupuesto sea mayor o igual a 4M, pero ademas, la universidad
// debe de estar en la region lima



use('db1')
db.universidades.find(
    {
        $or: [
            { alumnos: { $lt: 10000 }},
            { presupuesto: { $gte: 4000000 }}
        ],
        "direccion.region": "Lima"
    }
);


use ('db1')
db.universidades.find({
    $or: [ 
        { alumnos: { $lt: 10000 } }, 
        { "direccion.region": "Lima" } 
    ],
    presupuesto: { $gt: 4000000 }
});

// $


use ('db1')
db.universidades.find();

// hacer la misma consulta con el operador and implicito (,)


use('db1')
db.universidades.insertOne(
    {
        cantidad: 10
    }
);

// $set

use('db1')
db.universidades.updateMany(
    {
        "direccion.region": "Lima"
    },
    {
        $set:
        {
            alumnos: 10000
        }
    }
);

// $inc

use('db1')
db.universidades.updateMany(
    {
        "direccion.region": "Lima",
        alumnos: { $gte: 1000}
    },
    {
        $inc: {
            presupuesto: 3000000
        }
    }
);

// $rename

use('db1')
db.universidades.updateMany(
    {

    },
    {
        $rename:{
            alumnos: "cantidadAlumnos"
        }
    }
);


